[
  {
    "id": 1,
    "title": "Templating with mustache",
    "author": "John",
    "body": "Blog post number 1!\r\n\r\nThis is [an example](http://example.com/ \"Title\") inline link.\r\n\r\n",
    "updated": "2017-09-25T04:11:10.802Z"
  },
  {
    "id": 6,
    "title": "![](../images/node-red-icon.svg =24x*)  Node-RED integration: <span style=\"color: red;\"> From the Bottom Up </span>",
    "author": "PotOfCoffee2Go",
    "slug": "from-the-bottom",
    "body": "<img align=\"left\" src=\"../images/HAL9000.png\" width=\"80px\">\r\n<div>\r\n <p><span style=\"font-size: 1.4em;\">&nbsp;&nbsp;&nbsp;&#8220;I am completely operational, all my circuits are functioning perfectly.&#8221;</span></p>\r\n <p><span style=\"padding-left:60px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- <i>HAL 9000</i>\r\n    <a href=\"https://en.wikiquote.org/wiki/2001:_A_Space_Odyssey_(film)\">(2001: A Space Odyssey)</a> </span></p>\r\n</div>\r\n<br>\r\n\r\nThis project is but-yet-another-blog-site which contains pages and posts describing techniques using [Node-RED] to handle the [process and data flow] control of HTTP requests to the site's nodejs application. This site itself is an example of this paradigm. A combination of [node.js] packages and [Node-RED] are used to implement the site. A [RESTful] interface to data stored by the site is also implemented. \r\n\r\n----\r\n###### [\"Would You Like to Know More?\"]\r\n<ul class=\"nav know-more\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/site-usage\">Blog Site Usage</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/what-is-node-red\">What is Node-RED?</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red\">Web Page Flows</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red/#flow/8c3ec654.d10248\">RESTful flows</a>\r\n  </li>\r\n</ul>\r\n----\r\n\r\nIt is assumed that developers have an intermediate understanding of [HTML],  [Node.js], [expressjs], [Markdown], and [Node-RED]. [Ace] is used to edit the blog page/post entries and [Showdown] is used to convert Markdown to HTML - both have additional features and options worth looking into.\r\n\r\n###### A few of the objectives are to:\r\n - Show non-trivial examples of implementing [Node-RED] as MVC [control and view] components of an application.\r\n - Interface [Node-RED] to [Model], [Business], and [Presentation] Logic components written as conventional [node.js] modules.\r\n - Creation and debugging of application specific [Node-RED nodes].\r\n - Operation on single board systems ([Raspberry Pi], [BeagleBoard], [Intel Edison], etc.)\r\n\r\n----\r\n###### [\"Would You Like to Know More?\"]\r\n<ul class=\"nav know-more\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/site-usage\">Blog Site Usage</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/what-is-node-red\">What is Node-RED?</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red\">Web Page Flows</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red/#flow/8c3ec654.d10248\">RESTful flows</a>\r\n  </li>\r\n</ul>\r\n----\r\n\r\n[Node-RED] has been designed primarily to implement data flows for [Internet of Things (IoT)] technologies. It has a small cpu/memory footprint allowing operation on single board devices such as [Raspberry Pi], [BeagleBoard], [Intel Edison], etc. One of the objectives of this site is to use only the [core nodes] provided by the standard [Node-RED] install along with implementation of site specific [nodes].\r\n - Embed [Node-RED] into an express site\r\n - Programmatically set [Node-RED] configuration parameters\r\n - Use [Node-RED] to implement process flows initiated by HTTP requests\r\n - Deliver HTML and/or RESTful content using [Node-RED] flows\r\n - Delivery of static content (css, js, images, etc.) along side [Node-RED] flows\r\n - How to interface [Node-RED] `function` nodes to nodejs `modules`\r\n - Creation and debugging of application specific [Node-RED nodes]\r\n - Sharing of [Node-RED] code via sub-flows\r\n\r\n----\r\n###### [\"Would You Like to Know More?\"]\r\n<ul class=\"nav know-more\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/site-usage\">Blog Site Usage</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/what-is-node-red\">What is Node-RED?</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red\">Web Page Flows</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red/#flow/8c3ec654.d10248\">RESTful flows</a>\r\n  </li>\r\n</ul>\r\n----\r\n\r\nA simplified [MVC] paradigm is used as the site framework. [Node-RED] accesses the database `model` via four procedures `newPost`, `getPosts`, `updatePost`, and `deletePost` that are analogous to the [CRUD] operations in a [RESTful] interface. The [Business] and [Presentation] logic is also implemented into the `model` as suggested by the [MVC] paradigm; (which IMHO, is just silly - but so be it). The `model` contains sub-functions which prepare data for web page presentation by the [mustache template engine].\r\n\r\nThe `model` functions act upon a JSON file database to keep with the minimalist concept of [Node-RED] . One could implement a `model` with the same four functions using any database (_for example_: [MySQL], [Oracle], [MongoDB]) which would work without any changes to the [Node-RED] flows, as long as the resulting data format and order are identical.\r\n\r\nThe MVC [controller and view] components are implemented with-in [Node-RED] flows. The `control` part is straight forward by using the [Node-RED] `Http in and out` nodes. Web page `views` are constructed using the [Node-RED] built-in [mustache template engine]. Mustache is logic-less, which basically means there is only a most basic method to implement if-then-else conditionals with-in the template. Because of this, the [Presentation] Logic must be implemented in the `model` as mentioned above.\r\n\r\n----\r\n > **Note:** This project is an instructive tool installing itself locally at `http://localhost:8081`. **Anybody** with access to the site can modify blog pages and posts. \r\n \r\n----\r\n\r\n### Topics\r\n\r\n**Discuss**:\r\n - Situations when a conventional nodejs module is appropriate versus a node-red node\r\n - Scenarios when usage of node-red sub-flows is advantageous\r\n\r\n**IMHO**:\r\n - Where is the **'Logic'** in [MVC]???\r\n\r\n----\r\n\r\n\r\n### Installation\r\nTo see if you are interested, or wish to only see blog pages and posts:\r\n```bat\r\nnpm install node-red-from-the-bottom\r\ncd node-red-from-the-bottom\r\nnpm start\r\n```\r\nThen in address bar of your web browser:\r\n```\r\nhttp://localhost:8081\r\n```\r\n\r\nHowever; `node-red-from-the-bottom` is designed to be cloned so that you can inspect, modify, and play around with it.\r\n```bat\r\ngit clone https://github.com/PotOfCoffee2Go/node-red-from-the-bottom.git\r\ncd node-red-from-the-bottom\r\nnpm install\r\nnpm start\r\n```\r\n\r\n----\r\n\r\n\r\n### Not as difficult as you might think\r\nThis blog site is made up of only three javascript code files (excluding custom [Node-RED nodes]).\r\n\r\n----\r\n\r\n[\"Would You Like to Know More?\"]: https://www.youtube.com/watch?v=kdrjzE1SE58\r\n[Node-Red]: https://nodered.org/\r\n[process and data flow]: https://en.wikipedia.org/wiki/Flow-based_programming\r\n[control and view]: https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\r\n[controller and view]: https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\r\n[Model]: https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\r\n[MVC]: https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\r\n[HTML]: https://en.wikipedia.org/wiki/HTML\r\n[Node.js]: https://nodejs.org/\r\n[Business]: https://en.wikipedia.org/wiki/Business_logic\r\n[expressjs]: https://expressjs.com/\r\n[Presentation]: https://en.wikipedia.org/wiki/Presentation_logic\r\n[Node-RED nodes]: https://nodered.org/docs/creating-nodes/\r\n[Internet of Things (IoT)]: https://en.wikipedia.org/wiki/Internet_of_things\r\n[Raspberry Pi]: https://en.wikipedia.org/wiki/Raspberry_Pi\r\n[BeagleBoard]: https://en.wikipedia.org/wiki/BeagleBoard\r\n[Intel Edison]: https://en.wikipedia.org/wiki/Intel_Edison\r\n[core nodes]: https://github.com/node-red/node-red/tree/master/nodes/core\r\n[CRUD]: https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\r\n[RESTful]: https://en.wikipedia.org/wiki/Representational_state_transfer\r\n[mustache template engine]: https://mustache.github.io/\r\n[MySQL]: https://en.wikipedia.org/wiki/MySQL\r\n[Oracle]: https://en.wikipedia.org/wiki/Oracle_Database\r\n[MongoDB]: https://en.wikipedia.org/wiki/MongoDB\r\n[Markdown]: https://daringfireball.net/projects/markdown/syntax\r\n[Showdown]: https://github.com/showdownjs/showdown/wiki\r\n[Ace]: https://ace.c9.io/\r\n[nodes]: https://nodered.org/docs/creating-nodes/\r\n[RESTful]: https://en.wikipedia.org/wiki/Representational_state_transfer\r\n",
    "updated": "2017-10-16T07:34:16.416Z"
  },
  {
    "id": 8,
    "title": "MIT License",
    "author": "PotOfCoffee2Go",
    "slug": "mit-license",
    "webpage": "yes",
    "body": "```\r\nCopyright (c) 2017- Code Scullery, LLC\r\n```\r\n\r\n```\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n```\r\n",
    "updated": "2017-10-15T12:46:13.351Z"
  },
  {
    "id": 9,
    "title": "Test of db change",
    "author": "Kim",
    "body": "Test the db change too 2\r\n",
    "updated": "2017-09-25T04:04:11.059Z"
  },
  {
    "id": 10,
    "title": "A web page",
    "author": "Kim",
    "webpage": "yes",
    "body": "this is a web page cool",
    "updated": "2017-09-25T05:03:01.596Z"
  },
  {
    "id": 11,
    "title": "newest yett",
    "author": "Kim",
    "body": "This is so new! cool",
    "updated": "2017-10-15T11:28:49.684Z"
  },
  {
    "id": 12,
    "title": "newnew",
    "author": "Kim",
    "slug": "",
    "body": "yippie! sweet! sweeter!",
    "updated": "2017-10-16T02:34:13.805Z"
  },
  {
    "id": 14,
    "title": "![](../images/design.jpg =24x*) newnwenwenwne",
    "author": "kim",
    "slug": "newer-than-new-than-new",
    "body": "![](../images/design.jpg =80x*)\r\nThis is cooler\r\n\r\n - [x] This task is done\r\n - [ ] This is still pending\r\n\r\n<img src=\"/favicon.ico\" width=\"32\">\r\n\r\n![bar](/favicon.ico =64x*)\r\n![bar](/favicon.ico =128x*)\r\n\r\n",
    "updated": "2017-10-15T13:37:03.546Z"
  },
  {
    "id": 15,
    "title": "The last time",
    "author": "Kim",
    "slug": "the-last-time",
    "body": "This is the last one! again!\r\n<!-- <form action=\"https://google.com\"><input type=\"submit\" value=\"Go to Google\" /></form> -->",
    "updated": "2017-10-15T14:33:13.761Z"
  },
  {
    "id": 16,
    "title": "<img src=\"/images/node-red-icon.svg\" width=\"24px\"> What is node-RED?",
    "author": "PotOfCoffee2Go",
    "slug": "what-is-node-red",
    "webpage": "yes",
    "body": "[Node-RED] is a [flow based] programming language developed and maintained on [GitHub] by UK based [IBM Emerging Technology Group], licensed with the family of open-source projects sponsored by the [JS Foundation].\r\n\r\n----\r\n###### [\"Would You Like to Know More?\"]\r\n<ul class=\"nav know-more\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/site-usage\">Site Usage</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/red\">Site Flows</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" href=\"/posts/what-is-node-red\">What is Node-RED?</a>\r\n  </li>\r\n</ul>\r\n----\r\n\r\nProcess [flows] are implemented via a graphical browser-based flow editor (`Node-RED Editor`) used to describe sequences of [data flow] movement (`msg`) between one or more _independent_ synchronous and/or asynchronous processes (`nodes`). Flows modified in the `Node-RED Editor` are immediately implemented by _deploying_ flow changes to the [Node-RED] runtime.\r\n\r\nThe transmission of data consists of `wires` between one or more in/out `ports` assigned to each `node`. The wires determine the <span style=\"color:blue;\">path</span> of the `msg` data object which is the primary interaction between `nodes`. Node-RED also provides global contexts allowing nodes to share common data and functions. \r\n\r\nA `flow` is a sequence of `nodes` that are wired together. Since multiple `wires` can be connected to a single in/out `port`, a `flow` can have multiple  <span style=\"color:blue;\">paths</span> which node-red executes concurrently. The data `msg` content is cloned for each <span style=\"color:blue;\">path</span> thus the content of `msg` from one `path` can diverge from the `msg` content of another <span style=\"color:blue;\">path</span>.\r\n\r\n[Node-RED] can run as a standalone application or can be embedded as a module of a node.js application.\r\n\r\n[\"Would You Like to Know More?\"]: https://www.youtube.com/watch?v=kdrjzE1SE58\r\n[Node-RED]: https://nodered.org/\r\n[flow based]: https://en.wikipedia.org/wiki/Flow-based_programming\r\n[flows]: https://en.wikipedia.org/wiki/Flow-based_programming\r\n[GitHub]: https://github.com/node-red\r\n[IBM Emerging Technology Group]: https://emerging-technology.co.uk/\r\n[JS Foundation]: https://js.foundation/community/projects\r\n[data flow]: https://en.wikipedia.org/wiki/Dataflow_programming\r\n",
    "updated": "2017-10-16T06:37:56.721Z"
  },
  {
    "id": 17,
    "title": "PotOfCoffee2Go Blog Site Usage",
    "author": "PotOfCoffee2Go",
    "slug": "site-usage",
    "webpage": "yes",
    "body": "Put site usage here!\r\n",
    "updated": "2017-10-16T06:21:34.808Z"
  }
]
